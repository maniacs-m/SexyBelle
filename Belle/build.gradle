apply plugin: 'android'

android {
    compileSdkVersion 19
    buildToolsVersion '19.0.1'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 3
        versionName '1.1'
    }

    signingConfigs {
        release {
            storeFile file("jess.keystore")
            storePassword "gua495310401"
            keyAlias "jess.keystore"
            keyPassword "gua495310401"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            runProguard false
        }
    }


    lintOptions {
        abortOnError false
    }

    productFlavors {
        google {
            packageName = 'com.jesson.belle'

        }
        baidu {
            packageName = 'com.jesson.sexybelle'
        }
        market360 {
            packageName = 'com.jesson.sexybelle'
        }
    }

}

dependencies {
    compile 'com.android.support:support-v4:+'
    compile 'com.nostra13.universalimageloader:universal-image-loader:+'
    compile 'com.github.chrisbanes.actionbarpulltorefresh:library:+'
    compile 'com.google.code.gson:gson:2.2.+'
    compile 'de.greenrobot:eventbus:2.2.0'
    compile 'de.greenrobot:greendao:+'
    compile project(':JessKit')
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

android.applicationVariants.all { variant ->
    def flavor = "debug"
    if (variant.productFlavors.size() > 0) {
        flavor = variant.productFlavors[0].name
    }
    def label = '@string/app_name'
    if (flavor == 'google') {
        label = '@string/app_name_google'
    }
    def icon = '@drawable/ic_launcher'
    if (flavor == 'google') {
        icon = '@drawable/ic_launcher_google'
    }

    variant.processManifest.doLast {
        copy {
            from("${buildDir}/manifests") {
                include "${variant.dirName}/AndroidManifest.xml"
            }
            into("${buildDir}/manifests/$variant.name")

            filter {
                String line -> line.replaceAll("UMENG_CHANNEL_VALUE", "${flavor}")
            }
            filter {
                String line -> line.replaceAll("@string/app_name", "${label}")
            }
            filter {
                String line -> line.replaceAll("@drawable/ic_launcher", "${icon}")
            }

            variant.processResources.manifestFile = file("${buildDir}/manifests/${variant.name}/${variant.dirName}/AndroidManifest.xml")
        }
    }
}
